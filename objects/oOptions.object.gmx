<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sFade</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10005</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables

selection=1;
kEsc=false;
kSelect=false;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Change the option

kEsc   =keyboard_check(vk_escape);
kSelect=keyboard_check_pressed(vk_enter)||keyboard_check_pressed(vk_space);
kUp    =keyboard_check_pressed(vk_up)||keyboard_check_pressed(ord("W"));
kDown  =keyboard_check_pressed(vk_down)||keyboard_check_pressed(ord("S"));

if(kUp){
    selection--;
    if(selection&lt;1) selection=4;
}else if(kDown){
    selection++;
    if(selection&gt;4) selection=1;
}

if(kSelect){
    if(selection==1){
        if(global.music){
            global.music=false;
        }else{
            global.music=true;
        }
    }else if(selection==2){
        if(global.sounds){
            global.sounds=false;
        }else{
            global.sounds=true;
        }
    }else if(selection==3){
        if(global.fullscreen){
            global.fullscreen=false;
            window_set_fullscreen(global.fullscreen);
        }else{
            global.fullscreen=true;
            window_set_fullscreen(global.fullscreen);
        }
    }else if(selection==4){
        kEsc=true;
    }
}

if(kEsc){
    if(room==room_Menu){
        room_restart();
    }else{
        if(instance_exists(oPauseMenu)){
            //oPauseMenu.canEnter=false; 
            oPauseMenu.alarm[0]=1;
            oPauseMenu.options=false;
        }
        instance_destroy();
    }
}

if(instance_exists(oJustFade)){
    with(oJustFade){
        instance_destroy();
    }
}


//Handle music while paused
if(!audio_is_playing(musicChill)&amp;&amp;global.music){
    audio_play_sound(musicChill, 1, true);
}
if(audio_is_playing(musicChill)&amp;&amp;!global.music){
    audio_stop_sound(musicChill);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the options

draw_sprite(sFade, 0, view_wview[0]/2, view_hview[0]/2);

draw_set_font(font20);
draw_set_colour(c_white);
draw_set_halign(fa_left);
draw_set_valign(fa_center);

if(selection==1){
    draw_set_colour(c_yellow);
    draw_set_font(font20B);
}

if(global.music){
    draw_text(100+view_wview[0]/2, view_hview[0]/2, "MUSIC: ON");
}else{
    draw_text(100+view_wview[0]/2, view_hview[0]/2, "MUSIC: OFF");
}

draw_set_colour(c_white);
draw_set_font(font20);

if(selection==2){
    draw_set_colour(c_yellow);
    draw_set_font(font20B);
}
if(global.sounds){
    draw_text(100+view_wview[0]/2, 40+view_hview[0]/2, "SOUNDS: ON");
}else{
    draw_text(100+view_wview[0]/2, 40+view_hview[0]/2, "SOUNDS: OFF");
}

draw_set_colour(c_white);
draw_set_font(font20);

if(selection==3){
    draw_set_colour(c_yellow);
    draw_set_font(font20B);
}
if(global.fullscreen){
    draw_text(100+view_wview[0]/2, 80+view_hview[0]/2, "FULLSCREEN: ON");
}else{
    draw_text(100+view_wview[0]/2, 80+view_hview[0]/2, "FULLSCREEN: OFF");
}

draw_set_colour(c_white);
draw_set_font(font20);

if(selection==4){
    draw_set_colour(c_yellow);
    draw_set_font(font20B);
}
draw_text(100+view_wview[0]/2, 120+view_hview[0]/2, "BACK");

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
