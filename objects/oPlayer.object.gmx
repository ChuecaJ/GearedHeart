<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var kRight = false;
var kLeft = false;
var kJump = false;

vx = 0;
vy = 0;
cx = 0;
cy = 0;

platformTarget = 0;
wallTarget     = 0;

canStick = true;
sticking = false;

groundAccel = 1.00;
groundFric  = 2.00;
airAccel    = 1.00;
airFric     = 0.01;
vxMax       = 7.00;
vyMax       = 18.0;
gravNorm    = 0.70;
gravSlide   = 0.30;

clingTime   = 4.00;


onGround = OnGround();

//gravity_direction = 270;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sticking

sticking = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Apply Movement

//Sub-pixel movement
var vxNew, vyNew;

cx += vx;
cy += vy;
vxNew = round(cx);
vyNew = round(cy);
cx -= vxNew;
cy -= vyNew;

/*x += vx;
y += vy;*/


repeat(abs(vyNew)) {
    if (!PlatformCheck()){
        y += sign(vy);
    }else {
        vy = 0;
        break;
    }
}

repeat(abs(vxNew)) {
    if (!PlatformCheck()){
        x += sign(vx);
    }else {
        vx = 0;
        break;
    }
}

//Don't go thrugh the floor (Ã‘APA until sides get done)
/*if (place_meeting(x, y+1, platformTarget) &amp;&amp; place_meeting(x, y, platformTarget)){
    y = platformTarget.y-32;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement

//Controls
kRight = keyboard_check(ord('D'))  ||  keyboard_check(vk_right);
kLeft = keyboard_check(ord('A'))   ||  keyboard_check(vk_left);
kJump = keyboard_check(vk_space)   ||  keyboard_check_pressed(vk_up);

//Platform to interact
platformTarget = instance_nearest(x, y, oBlock);

//Checkers
cLeft  = place_meeting(x - 1, y, oBlock);
cRight = place_meeting(x + 1, y, oBlock);
if (cLeft){ 
    wallTarget = instance_place(x - 1, y, oBlock);
}
if (cRight){ 
    wallTarget = instance_place(x + 1, y, oBlock);
}

//Apply the correct acceleration
var tempAccel, tempFric

if (onGround) {  
    tempAccel = groundAccel;
    tempFric  = groundFric;
} else {
    tempAccel = airAccel;
    tempFric  = airFric;
}

// Wall cling
if ((!cRight &amp;&amp; !cLeft) || onGround) {
    canStick = true;
    sticking = false;
} else if (((kRight &amp;&amp; cLeft) || (kLeft &amp;&amp; cRight)) &amp;&amp; canStick &amp;&amp; !onGround) {
    alarm[0] = clingTime;
    sticking = true; 
    canStick = false;       
}
//Gravity while cling
if ((cLeft || cRight) &amp;&amp; vy &gt;= 0) {
    // Wall slide
    vy = Approach(vy, vyMax * 0.33, gravSlide);
} else {
    // Fall normally
    vy = Approach(vy, vyMax, gravNorm);
}

// Left 
if (kLeft &amp;&amp; !kRight &amp;&amp; !sticking) {
    // Apply acceleration left
    if (vx &gt; 0){
        vx = Approach(vx, 0, tempFric);  
    } 
    vx = Approach(vx, -vxMax, tempAccel);
// Right
} else if (kRight &amp;&amp; !kLeft &amp;&amp; !sticking) {
    // Apply acceleration right
    if (vx &lt; 0){
        vx = Approach(vx, 0, tempFric);  
    } 
    vx = Approach(vx, vxMax, tempAccel);
}

// Friction
if (!kRight &amp;&amp; !kLeft) {
    vx    = Approach(vx, 0, tempFric);
}







</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (debug_mode){
    draw_text (50, 50, OnGround());
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
