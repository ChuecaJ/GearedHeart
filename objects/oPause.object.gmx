<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Surface &amp; shader values


pauseSurf = surface_create(view_wview[0], view_hview[0]);   //Initialize the surface

surface_set_target(pauseSurf);  //Create the surface
draw_clear_alpha(c_black, 0);   //Clean the screen
with(all){
    if(visible==true){
        x = x-view_xview[0];    //Relate the object to the view
        y = y-view_yview[0];
        event_perform(ev_draw, 0);
        x = x+view_xview[0];
        y = y+view_yview[0];
    }
}
surface_reset_target();

instance_deactivate_all(true);
visible = true;

pixelSize   = 1.0;
speedChange = 0.0;
stepsChange = 15.0;

spawnMenu = true;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Gradually Black &amp; White 

if(speedChange&lt;stepsChange){
    speedChange++;
    pixelSize+=0.2;
}else{
    speedChange=stepsChange;
    if(spawnMenu){
        if(!instance_exists(oPauseMenu)){
            instance_create(x, y, oPauseMenu);
        }
        spawnMenu=false;
    }
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Unpause


if(!global.pause){    
    if(!spawnMenu){
        with(oPauseMenu){
            instance_destroy();
        }
        spawnMenu=true
    }
    surface_free(pauseSurf);
    instance_activate_all();
    instance_destroy();
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the surface with the shader

instance_create(0,0,oEnableShader_5002);//Set the shader at depth -4998 for the tile set
shader_set(shd_Pause);

var spdCh = shader_get_uniform(shd_Pause, "speedChange");
shader_set_uniform_f(spdCh, speedChange);
var stpCh = shader_get_uniform(shd_Pause, "stepsChange");
shader_set_uniform_f(stpCh, stepsChange);

var s = shader_get_uniform(shd_Pause, "size");
shader_set_uniform_f(s, surface_get_width(pauseSurf), surface_get_height(pauseSurf));
var ps = shader_get_uniform(shd_Pause, "pixelSize");
shader_set_uniform_f(ps, pixelSize);


if(surface_exists(pauseSurf)){
    draw_surface(pauseSurf, view_xview[0], view_yview[0]);
}
shader_reset();
instance_create(0,0,oDisableShader_4998);//Reset the shader at depth -5002 for the tile set

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
